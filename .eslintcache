[{"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\index.js":"1","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\App.js":"3","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Full\\Header.js":"4","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Page Links\\Bar.js":"5","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Buttons\\JoinUsButton.js":"6","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Menu\\Menu.js":"7","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Full\\Main.js":"8","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Buttons\\LearnMoreButton.js":"9","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Logo\\Logo.js":"10","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\lists-helpers.js":"11","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\BackgroundImage\\BackgroundImage.js":"12","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\Features\\Features.js":"13","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\JoinDesc\\JoinDesc.js":"14","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\SectionSeparator\\SectionSeparator.js":"15","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\OurDogs\\OurDogs.js":"16","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\ClubEvents\\ClubEvents.js":"17","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Footer\\Footer.js":"18","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\RegistrationForm.js":"19","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\About\\About.js":"20","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Events.js":"21","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Dropdown\\Dropdown.js":"22","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Full\\Registry.js":"23","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Calendar\\Calendar.js":"24","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Merchandise\\Merchandise.js":"25","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\NotFound\\NotFound.js":"26","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\Admin.js":"27","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\dummy-events.js":"28","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\EnlargeImage.js":"29","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\FieldArrayOwnerForm.js":"30","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\FieldArrayDogForm.js":"31","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\NestedDogOwnerArray.js":"32","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundFieldArray.js":"33","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundNestedFieldArray.js":"34","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundFieldArray2.js":"35","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\NestedRegistrationForm.js":"36","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\backend.js":"37","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\firebase.js":"38","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Results\\Results.js":"39","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\RegistrationModal.js":"40","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\RegistrationEvent.js":"41","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\SanctionedRegistration.js":"42","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\NonsanctionedRegistration.js":"43","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindDog.js":"44","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindOwner.js":"45","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\EventPage.js":"46","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\RegisterEvent.js":"47","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindEvent.js":"48","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\DisplayImg.js":"49","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\RegisterForEvent.js":"50","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\VerifyEmail\\VerifyEmail.js":"51","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\RenderDog.js":"52","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\ConfirmationPage.js":"53","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\ClubRegistrationConfirmation.js":"54","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\SanctionedEventRegistration.js":"55","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\UnsanctionedEventRegistration.js":"56"},{"size":478,"mtime":1608493645128,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":2075,"mtime":1609799927121,"results":"60","hashOfConfig":"58"},{"size":846,"mtime":1607872230871,"results":"61","hashOfConfig":"58"},{"size":456,"mtime":1607890879185,"results":"62","hashOfConfig":"58"},{"size":330,"mtime":1609479953823,"results":"63","hashOfConfig":"58"},{"size":505,"mtime":1607871871099,"results":"64","hashOfConfig":"58"},{"size":1564,"mtime":1609603697912,"results":"65","hashOfConfig":"58"},{"size":344,"mtime":1607823074553,"results":"66","hashOfConfig":"58"},{"size":389,"mtime":1607899921886,"results":"67","hashOfConfig":"58"},{"size":1009,"mtime":1609479760617,"results":"68","hashOfConfig":"58"},{"size":1043,"mtime":1610253366632,"results":"69","hashOfConfig":"58"},{"size":1148,"mtime":1608080481909,"results":"70","hashOfConfig":"58"},{"size":2690,"mtime":1609952561077,"results":"71","hashOfConfig":"58"},{"size":161,"mtime":1607831211520,"results":"72","hashOfConfig":"58"},{"size":1562,"mtime":1608081435193,"results":"73","hashOfConfig":"58"},{"size":2787,"mtime":1610208406901,"results":"74","hashOfConfig":"58"},{"size":1388,"mtime":1610647374016,"results":"75","hashOfConfig":"58"},{"size":267,"mtime":1608492295300,"results":"76","hashOfConfig":"58"},{"size":2133,"mtime":1608082581085,"results":"77","hashOfConfig":"58"},{"size":794,"mtime":1610207281098,"results":"78","hashOfConfig":"58"},{"size":697,"mtime":1607872117450,"results":"79","hashOfConfig":"58"},{"size":395,"mtime":1608959007004,"results":"80","hashOfConfig":"58"},{"size":1517,"mtime":1609698346238,"results":"81","hashOfConfig":"58"},{"size":294,"mtime":1608779940476,"results":"82","hashOfConfig":"58"},{"size":291,"mtime":1607959268740,"results":"83","hashOfConfig":"58"},{"size":2178,"mtime":1609581823775,"results":"84","hashOfConfig":"58"},{"size":1918,"mtime":1608944190751,"results":"85","hashOfConfig":"58"},{"size":891,"mtime":1608025090840,"results":"86","hashOfConfig":"58"},{"size":6208,"mtime":1608329205406,"results":"87","hashOfConfig":"58"},{"size":2465,"mtime":1608330137014,"results":"88","hashOfConfig":"58"},{"size":1430,"mtime":1608330073176,"results":"89","hashOfConfig":"58"},{"size":9557,"mtime":1610256016444,"results":"90","hashOfConfig":"58"},{"size":2770,"mtime":1610255938500,"results":"91","hashOfConfig":"58"},{"size":7191,"mtime":1610732948083,"results":"92","hashOfConfig":"58"},{"size":3636,"mtime":1610255964494,"results":"93","hashOfConfig":"58"},{"size":185,"mtime":1610739644372,"results":"94","hashOfConfig":"58"},{"size":890,"mtime":1608883729490,"results":"95","hashOfConfig":"58"},{"size":346,"mtime":1610287667850,"results":"96","hashOfConfig":"58"},{"size":962,"mtime":1608764112400,"results":"97","hashOfConfig":"58"},{"size":1006,"mtime":1610573427831,"results":"98","hashOfConfig":"58"},{"size":6583,"mtime":1610739484382,"results":"99","hashOfConfig":"58"},{"size":12302,"mtime":1610580708778,"results":"100","hashOfConfig":"58"},{"size":2561,"mtime":1609731977403,"results":"101","hashOfConfig":"58"},{"size":3085,"mtime":1609189659460,"results":"102","hashOfConfig":"58"},{"size":2535,"mtime":1610220442428,"results":"103","hashOfConfig":"58"},{"size":1579,"mtime":1609606257686,"results":"104","hashOfConfig":"58"},{"size":7771,"mtime":1610206587170,"results":"105","hashOfConfig":"58"},{"size":450,"mtime":1610184519874,"results":"106","hashOfConfig":"58"},{"size":507,"mtime":1610573305349,"results":"107","hashOfConfig":"58"},{"size":963,"mtime":1609672776434,"results":"108","hashOfConfig":"58"},{"size":9328,"mtime":1609760000449,"results":"109","hashOfConfig":"58"},{"size":4506,"mtime":1610741590258,"results":"110","hashOfConfig":"58"},{"size":20372,"mtime":1610222610948,"results":"111","hashOfConfig":"58"},{"size":2198,"mtime":1610649331379,"results":"112","hashOfConfig":"58"},{"size":10192,"mtime":1610583261203,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1k0ngmw",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"116"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"116"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"116"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"116"},"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\index.js",[],["254","255"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\App.js",["256","257","258"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./Components/Header/Full/Header\";\nimport Main from \"./Components/Pages/Main/Full/Main\";\nimport About from \"./Components/Pages/About/About\";\nimport Registry from \"./Components/Pages/Registry/Full/Registry\";\nimport VerifyEmail from \"./Components/Pages/VerifyEmail/VerifyEmail\";\nimport Events from \"./Components/Pages/Events/Events\";\nimport EventPage from \"./Components/Pages/EventPage/EventPage\";\nimport Calendar from \"./Components/Pages/Calendar/Calendar\";\nimport Results from \"./Components/Pages/Results/Results\";\nimport Merchandise from \"./Components/Pages/Merchandise/Merchandise\";\nimport ConfirmationPage from \"./Components/Pages/Confirmation Page/ConfirmationPage\";\nimport NotFound from \"./Components/Pages/NotFound/NotFound\";\nimport Footer from \"./Components/Footer/Footer\";\n//ADMIN PAGES\nimport Admin from \"./Components/Hidden/Admin\";\nimport { events } from \"./Components/helpers/dummy-events\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import \"semantic-ui-css/semantic.min.css\";\nimport \"./modal.scss\";\nimport \"./Main.scss\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/joinclub\" component={Registry} />\n          <Route\n            path=\"/verifyemail/:verificationToken\"\n            component={VerifyEmail}\n          />\n          <Route path=\"/events\" component={Events} />\n          <Route path=\"/eventpage/:eventId\" component={EventPage} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/results\" component={Results} />\n          <Route path=\"/merchandise\" component={Merchandise} />\n          <Route path=\"/confirm\" component={ConfirmationPage} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route component={NotFound} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Full\\Header.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Page Links\\Bar.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Buttons\\JoinUsButton.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Menu\\Menu.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Full\\Main.js",["259","260","261","262","263","264"],"import React, { useState, useEffect } from \"react\";\r\nimport BackgroundImage from \"../Parts/BackgroundImage/BackgroundImage\";\r\nimport { apiUrl } from \"../../../helpers/backend\";\r\nimport Features from \"../Parts/Features/Features\";\r\nimport JoinDesc from \"../Parts/JoinDesc/JoinDesc\";\r\nimport SectionSeparator from \"../Parts/SectionSeparator/SectionSeparator\";\r\nimport OurDogs from \"../Parts/OurDogs/OurDogs\";\r\n\r\nimport ClubEvents from \"../Parts/ClubEvents/ClubEvents\";\r\n\r\nfunction Main(props) {\r\n  // const { events } = props;\r\n  // console.log(events);\r\n  // const eventsListLength = events[0].length;\r\n  // // console.log(eventsListLength);\r\n  // const mainList = [\r\n  //   events[0][eventsListLength - 1],\r\n  //   events[0][eventsListLength - 2],\r\n  //   events[0][eventsListLength - 3],\r\n  // ];\r\n\r\n  // console.log(mainList);\r\n\r\n  const [events, setEvents] = useState([]);\r\n  const fetchEvents = async () => {\r\n    const getRequest = await fetch(`${apiUrl}/api/events`);\r\n\r\n    const response = await getRequest.json();\r\n    // console.log(response.events);\r\n    const responseParsed = JSON.parse(response.events);\r\n    console.log(responseParsed);\r\n    setEvents([responseParsed]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main w100per\">\r\n      <BackgroundImage />\r\n      {/* <Features />\r\n      <JoinDesc />\r\n      <SectionSeparator />\r\n      <OurDogs />\r\n      <SectionSeparator />\r\n      {events[0] !== undefined ? <ClubEvents events={events} /> : null} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Buttons\\LearnMoreButton.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Logo\\Logo.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\lists-helpers.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\BackgroundImage\\BackgroundImage.js",["265"],"import React from \"react\";\r\nimport LearnMoreButton from \"../../../../Header/Parts/Buttons/LearnMoreButton\";\r\n\r\nfunction BackgroundImage() {\r\n  return (\r\n    <div className=\"background-image w100per\">\r\n      <div className=\"background-image-container\">\r\n        <div className=\"center-vertically-container\">\r\n          <div className=\"container\">\r\n            <div className=\"background-image-content\">\r\n              <h1 className=\"background-image-content-heading\">\r\n                Central Florida Sighthound Racing Club\r\n              </h1>\r\n              {/* <p className=\"background-image-content-paragraph\">\r\n                Ex exercitation sint enim qui nostrud cupidatat ea excepteur\r\n                veniam ipsum. Velit velit eiusmod cillum officia. Consectetur\r\n                culpa adipisicing veniam eu consectetur ex non officia sit\r\n                reprehenderit eiusmod tempor.\r\n              </p> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundImage;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\Features\\Features.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\JoinDesc\\JoinDesc.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\SectionSeparator\\SectionSeparator.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\OurDogs\\OurDogs.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Main\\Parts\\ClubEvents\\ClubEvents.js",["266","267","268","269","270","271","272"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegistrationModal from \"../../../Events/Parts/RegistrationModal\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport { format, addDays } from \"date-fns\";\r\n\r\nfunction ClubEvents(props) {\r\n  //when server is built, there should be an API call\r\n  //to the server to create the events list here\r\n  const { events } = props;\r\n\r\n  // console.log(events[0]);\r\n  // console.log(new Date(events[0][0].startDate).getTime());\r\n\r\n  const bubbleSort = (arr) => {\r\n    let temp;\r\n    // console.log(new Date(arr[0].startDate).getTime());\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      for (let j = 0; j < i; j++) {\r\n        if (\r\n          new Date(arr[j].startDate).getTime() >\r\n          new Date(arr[j + 1].startDate).getTime()\r\n        ) {\r\n          temp = arr[j];\r\n          arr[j] = arr[j + 1];\r\n          arr[j + 1] = temp;\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  bubbleSort(events[0]);\r\n\r\n  const today = new Date();\r\n\r\n  const passed = [];\r\n\r\n  const passedDate = (arr) => {\r\n    arr.filter((item) => {\r\n      if (new Date(item.startDate).getTime() < addDays(today.getTime(), -1)) {\r\n      } else {\r\n        console.log(\"there\");\r\n        passed.push(item);\r\n      }\r\n    });\r\n  };\r\n\r\n  passedDate(events[0]);\r\n\r\n  console.log(passed);\r\n\r\n  const displayEvent = (one, index) => {\r\n    return (\r\n      <div key={index} className=\"events-div\">\r\n        <div className=\"events-list-item\">\r\n          <Link to={`/eventpage/${one.eventId}`}>\r\n            <div className=\"frame events-frame\">\r\n              <div className={`events-frame-content `}>\r\n                <div className={`events-text `}>\r\n                  <div className={`events-text-top`}>\r\n                    <h2 className=\"event-title\">{one.eventName}</h2>\r\n                    <h5 className=\"event-date-time\">\r\n                      {format(\r\n                        addDays(new Date(one.startDate), 1),\r\n                        \"MMM do yyyy\"\r\n                      )}{\" \"}\r\n                      <br />{\" \"}\r\n                    </h5>\r\n                    <p>{one.eventAddress}</p> <br />\r\n                    <p>{one.eventDescription}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const listEvents = passed.map((one, index) => {\r\n    return displayEvent(one, index);\r\n  });\r\n\r\n  return (\r\n    <div className=\"club-events w100per\">\r\n      <div className=\"container\">\r\n        <div className=\"title-bundle\"></div>\r\n        {events !== undefined ? listEvents : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClubEvents;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Footer\\Footer.js",["273"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pageLinks } from \"../helpers/lists-helpers\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\n\r\nfunction Footer() {\r\n  const linksList = pageLinks.map((link, index) => {\r\n    return (\r\n      <li key={index} className=\"footer-links\">\r\n        <Link to={link.link}>{link.page}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-background\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-top\">\r\n            <div className=\"footer-left\">\r\n              {\" \"}\r\n              <h5 id=\"footer-navigation\">Navigation</h5>\r\n              <ul>{linksList}</ul>\r\n            </div>\r\n            <div className=\"footer-right\">\r\n              <h6 id=\"footer-icon\">\r\n                Come hang out\r\n                <br /> with us on\r\n                <br /> facebook!\r\n                <br />\r\n                <a\r\n                  href=\"https://www.facebook.com/groups/714718341874468\"\r\n                  target=\"_blank\"\r\n                >\r\n                  {\" \"}\r\n                  <FaFacebook id=\"footer-navigation\" size=\"2em\" />{\" \"}\r\n                </a>\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-bottom\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\RegistrationForm.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\About\\About.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Events.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Header\\Parts\\Dropdown\\Dropdown.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Full\\Registry.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Calendar\\Calendar.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Merchandise\\Merchandise.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\NotFound\\NotFound.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\Admin.js",["274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Menu, Segment, Form } from \"semantic-ui-react\";\r\nimport FindDog from \"./FindDog\";\r\nimport FindOwner from \"./FindOwner\";\r\nimport RegisterEvent from \"./RegisterEvent\";\r\nimport FindEvent from \"./FindEvent\";\r\n\r\n// /2946fec9-4210-4aea-a828-fa315bad9a43\r\n\r\nfunction Admin() {\r\n  const [activeItem, setActiveItem] = useState();\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"container\">\r\n        <div className=\"frame\">\r\n          <div className=\"retrieve-data\">\r\n            <Segment inverted>\r\n              <Menu inverted pointing secondary fluid widths={4}>\r\n                <Menu.Item\r\n                  name=\"findDog\"\r\n                  active={activeItem === \"findDog\"}\r\n                  onClick={() => setActiveItem(\"findDog\")}\r\n                >\r\n                  Find Dog\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  name=\"findOwner\"\r\n                  active={activeItem === \"findOwner\"}\r\n                  onClick={() => setActiveItem(\"findOwner\")}\r\n                >\r\n                  Find Owner\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  name=\"findEvent\"\r\n                  active={activeItem === \"findEvent\"}\r\n                  onClick={() => setActiveItem(\"findEvent\")}\r\n                >\r\n                  Find Event\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  name=\"registerEvent\"\r\n                  active={activeItem === \"registerEvent\"}\r\n                  onClick={() => setActiveItem(\"registerEvent\")}\r\n                >\r\n                  Register Event\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Segment>\r\n          </div>\r\n\r\n          {activeItem === \"findDog\" ? <FindDog /> : null}\r\n          {activeItem === \"findOwner\" ? <FindOwner /> : null}\r\n          {activeItem === \"registerEvent\" ? <RegisterEvent /> : null}\r\n          {activeItem === \"findEvent\" ? <FindEvent /> : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\dummy-events.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\EnlargeImage.js",["278","279","280"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\FieldArrayOwnerForm.js",["281"],"import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\n\r\nfunction FieldArrayOwnerForm({ register, control, setValue, getValues }) {\r\n  const ownerArray = useFieldArray({\r\n    control,\r\n    name: \"owners\",\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {ownerArray.fields.map((item, index) => {\r\n          return (\r\n            <li key={item.id}>\r\n              <div className=\"owner-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"First name\"\r\n                  name={`owners[${index}].firstName`}\r\n                  ref={register({ required: true, maxLength: 80 })}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Last name\"\r\n                  name={`owners[${index}].lastName`}\r\n                  ref={register({ required: true, maxLength: 100 })}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  name={`owners[${index}].email`}\r\n                  ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                />\r\n                <input\r\n                  type=\"tel\"\r\n                  placeholder=\"Mobile number\"\r\n                  name={`owners[${index}].mobile`}\r\n                  ref={register({\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 12,\r\n                  })}\r\n                />\r\n                <input\r\n                  type=\"tel\"\r\n                  placeholder=\"Landline\"\r\n                  name={`owners[${index}].landline`}\r\n                  ref={register}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address Line 1\"\r\n                  name={`owners[${index}].addressOne`}\r\n                  ref={register({ required: true })}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address Line 2\"\r\n                  name={`owners[${index}].addressTwo`}\r\n                  ref={register}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Zip code\"\r\n                  name={`owners[${index}].zipCode`}\r\n                  ref={register({ required: true })}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  name={`owners[${index}].city`}\r\n                  ref={register({ required: true })}\r\n                />\r\n                <select\r\n                  name={`owners[${index}].state`}\r\n                  ref={register({ required: true })}\r\n                >\r\n                  <option value=\"AL\">AL</option>\r\n                  <option value=\"AK\">AK</option>\r\n                  <option value=\"AS\">AS</option>\r\n                  <option value=\"AZ\">AZ</option>\r\n                  <option value=\"AR\">AR</option>\r\n                  <option value=\"CA\">CA</option>\r\n                  <option value=\"CO\">CO</option>\r\n                  <option value=\"CT\">CT</option>\r\n                  <option value=\"DE\">DE</option>\r\n                  <option value=\"DC\">DC</option>\r\n                  <option value=\"FM\">FM</option>\r\n                  <option value=\"FL\">FL</option>\r\n                  <option value=\"GA\">GA</option>\r\n                  <option value=\"GU\">GU</option>\r\n                  <option value=\"HI\">HI</option>\r\n                  <option value=\"ID\">ID</option>\r\n                  <option value=\"IL\">IL</option>\r\n                  <option value=\"IN\">IN</option>\r\n                  <option value=\"IA\">IA</option>\r\n                  <option value=\"KS\">KS</option>\r\n                  <option value=\"KY\">KY</option>\r\n                  <option value=\"LA\">LA</option>\r\n                  <option value=\"ME\">ME</option>\r\n                  <option value=\"MH\">MH</option>\r\n                  <option value=\"MD\">MD</option>\r\n                  <option value=\"MA\">MA</option>\r\n                  <option value=\"MI\">MI</option>\r\n                  <option value=\"MN\">MN</option>\r\n                  <option value=\"MS\">MS</option>\r\n                  <option value=\"MO\">MO</option>\r\n                  <option value=\"MT\">MT</option>\r\n                  <option value=\"NE\">NE</option>\r\n                  <option value=\"NV\">NV</option>\r\n                  <option value=\"NH\">NH</option>\r\n                  <option value=\"NJ\">NJ</option>\r\n                  <option value=\"NM\">NM</option>\r\n                  <option value=\"NY\">NY</option>\r\n                  <option value=\"NC\">NC</option>\r\n                  <option value=\"ND\">ND</option>\r\n                  <option value=\"MP\">MP</option>\r\n                  <option value=\"OH\">OH</option>\r\n                  <option value=\"OK\">OK</option>\r\n                  <option value=\"OR\">OR</option>\r\n                  <option value=\"PW\">PW</option>\r\n                  <option value=\"PA\">PA</option>\r\n                  <option value=\"PR\">PR</option>\r\n                  <option value=\"RI\">RI</option>\r\n                  <option value=\"SC\">SC</option>\r\n                  <option value=\"SD\">SD</option>\r\n                  <option value=\"TN\">TN</option>\r\n                  <option value=\"TX\">TX</option>\r\n                  <option value=\"UT\">UT</option>\r\n                  <option value=\"VT\">VT</option>\r\n                  <option value=\"VI\">VI</option>\r\n                  <option value=\"VA\">VA</option>\r\n                  <option value=\"WA\">WA</option>\r\n                  <option value=\"WV\">WV</option>\r\n                  <option value=\"WI\">WI</option>\r\n                  <option value=\"WY'\">WY'</option>\r\n                </select>\r\n                <button type=\"button\" onClick={() => ownerArray.remove(index)}>\r\n                  Remove Primary Owner\r\n                </button>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <section>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            ownerArray.append();\r\n          }}\r\n        >\r\n          Add Primary Owner\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldArrayOwnerForm;\r\n",["282","283"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\FieldArrayDogForm.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\NestedDogOwnerArray.js",[],["284","285"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundFieldArray.js",["286","287"],"import React, { useEffect } from \"react\";\r\nimport { useFieldArray, Controller } from \"react-hook-form\";\r\nimport { Form, Button, Segment, Divider } from \"semantic-ui-react\";\r\n\r\nexport default function Fields({ control, register, setValue, getValues }) {\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"owners\",\r\n  });\r\n\r\n  const addPrimaryOwner = () => {\r\n    append({ name: \"append\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addPrimaryOwner();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {fields.map((item, index) => {\r\n          return (\r\n            <li key={item.id}>\r\n              <Segment color=\"teal\">\r\n                <Divider horizontal>Primary Owner INFORMATION</Divider>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <label>\r\n                      First name *{\" \"}\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"First name\"\r\n                        name={`owners[${index}].firstName`}\r\n                        ref={register({ required: true, maxLength: 80 })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>\r\n                      Last name *\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Last name\"\r\n                        name={`owners[${index}].lastName`}\r\n                        ref={register({ required: true, maxLength: 100 })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field>\r\n                  <label>\r\n                    Email *{\" \"}\r\n                    <input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      name={`owners[${index}].email`}\r\n                      ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                    />\r\n                  </label>\r\n                </Form.Field>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <label>\r\n                      Mobile number *{\" \"}\r\n                      <input\r\n                        required\r\n                        type=\"tel\"\r\n                        placeholder=\"Mobile number\"\r\n                        name={`owners[${index}].mobile`}\r\n                        ref={register({\r\n                          required: true,\r\n                          minLength: 6,\r\n                          maxLength: 12,\r\n                        })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>\r\n                      Home phone number{\" \"}\r\n                      <input\r\n                        type=\"tel\"\r\n                        placeholder=\"Landline\"\r\n                        name={`owners[${index}].landline`}\r\n                        ref={register}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <label>\r\n                      Address Line 1 *{\" \"}\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Address Line 1\"\r\n                        name={`owners[${index}].addressOne`}\r\n                        ref={register({ required: true })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>\r\n                      Address Line 2{\" \"}\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Address Line 2\"\r\n                        name={`owners[${index}].addressTwo`}\r\n                        ref={register}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field>\r\n                    <label>\r\n                      Zip code *{\" \"}\r\n                      <input\r\n                        required\r\n                        type=\"number\"\r\n                        placeholder=\"Zip code\"\r\n                        name={`owners[${index}].zipCode`}\r\n                        ref={register({ required: true })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>\r\n                      City *{\" \"}\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        name={`owners[${index}].city`}\r\n                        ref={register({ required: true })}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>\r\n                      State *{\" \"}\r\n                      <select\r\n                        required\r\n                        placeholder=\"State\"\r\n                        name={`owners[${index}].state`}\r\n                        ref={register({ required: true })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Select State *\r\n                        </option>\r\n                        <option value=\"AL\">AL</option>\r\n                        <option value=\"AK\">AK</option>\r\n                        <option value=\"AS\">AS</option>\r\n                        <option value=\"AZ\">AZ</option>\r\n                        <option value=\"AR\">AR</option>\r\n                        <option value=\"CA\">CA</option>\r\n                        <option value=\"CO\">CO</option>\r\n                        <option value=\"CT\">CT</option>\r\n                        <option value=\"DE\">DE</option>\r\n                        <option value=\"DC\">DC</option>\r\n                        <option value=\"FM\">FM</option>\r\n                        <option value=\"FL\">FL</option>\r\n                        <option value=\"GA\">GA</option>\r\n                        <option value=\"GU\">GU</option>\r\n                        <option value=\"HI\">HI</option>\r\n                        <option value=\"ID\">ID</option>\r\n                        <option value=\"IL\">IL</option>\r\n                        <option value=\"IN\">IN</option>\r\n                        <option value=\"IA\">IA</option>\r\n                        <option value=\"KS\">KS</option>\r\n                        <option value=\"KY\">KY</option>\r\n                        <option value=\"LA\">LA</option>\r\n                        <option value=\"ME\">ME</option>\r\n                        <option value=\"MH\">MH</option>\r\n                        <option value=\"MD\">MD</option>\r\n                        <option value=\"MA\">MA</option>\r\n                        <option value=\"MI\">MI</option>\r\n                        <option value=\"MN\">MN</option>\r\n                        <option value=\"MS\">MS</option>\r\n                        <option value=\"MO\">MO</option>\r\n                        <option value=\"MT\">MT</option>\r\n                        <option value=\"NE\">NE</option>\r\n                        <option value=\"NV\">NV</option>\r\n                        <option value=\"NH\">NH</option>\r\n                        <option value=\"NJ\">NJ</option>\r\n                        <option value=\"NM\">NM</option>\r\n                        <option value=\"NY\">NY</option>\r\n                        <option value=\"NC\">NC</option>\r\n                        <option value=\"ND\">ND</option>\r\n                        <option value=\"MP\">MP</option>\r\n                        <option value=\"OH\">OH</option>\r\n                        <option value=\"OK\">OK</option>\r\n                        <option value=\"OR\">OR</option>\r\n                        <option value=\"PW\">PW</option>\r\n                        <option value=\"PA\">PA</option>\r\n                        <option value=\"PR\">PR</option>\r\n                        <option value=\"RI\">RI</option>\r\n                        <option value=\"SC\">SC</option>\r\n                        <option value=\"SD\">SD</option>\r\n                        <option value=\"TN\">TN</option>\r\n                        <option value=\"TX\">TX</option>\r\n                        <option value=\"UT\">UT</option>\r\n                        <option value=\"VT\">VT</option>\r\n                        <option value=\"VI\">VI</option>\r\n                        <option value=\"VA\">VA</option>\r\n                        <option value=\"WA\">WA</option>\r\n                        <option value=\"WV\">WV</option>\r\n                        <option value=\"WI\">WI</option>\r\n                        <option value=\"WY'\">WY</option>\r\n                      </select>\r\n                    </label>\r\n                  </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  fluid\r\n                  basic\r\n                  color=\"blue\"\r\n                  type=\"button\"\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete Primary Owner\r\n                </Button>\r\n              </Segment>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <section className=\"center-button-primary\"></section>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundNestedFieldArray.js",["288","289"],"import React, { useState } from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\n\r\nexport default ({ nestIndex, control, register }) => {\r\n  const { fields, remove, append } = useFieldArray({\r\n    control,\r\n    name: `dogOwner[${nestIndex}].nestedArray`,\r\n  });\r\n\r\n  const [num, setNum] = useState(0);\r\n\r\n  let secondaryNum = 0;\r\n  const isDisabled = num === 2 ? true : false;\r\n\r\n  const addSecondary = () => {\r\n    append();\r\n    setNum(num + 1);\r\n  };\r\n\r\n  const removeSecondary = (num) => {\r\n    remove(num);\r\n    setNum(num - 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {fields.map((item, k) => {\r\n        return (\r\n          <div key={item.id} style={{ marginLeft: 20 }}>\r\n            <label>Secondary Owner:</label>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  First name *{\" \"}\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    name={`dogOwner[${nestIndex}].secondary[${k}].firstName`}\r\n                    ref={register({ required: true, maxLength: 80 })}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Last name *{\" \"}\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    name={`dogOwner[${nestIndex}].secondary[${k}].lastName`}\r\n                    ref={register({ required: true, maxLength: 100 })}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Email *\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name={`dogOwner[${nestIndex}].secondary[${k}].email`}\r\n                    ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Button\r\n              fluid\r\n              basic\r\n              color=\"blue\"\r\n              type=\"button\"\r\n              onClick={() => removeSecondary(k)}\r\n            >\r\n              Delete Secondary Owner\r\n            </Button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <section className=\"center-button-secondary\">\r\n        <Button\r\n          color=\"teal\"\r\n          type=\"button\"\r\n          onClick={addSecondary}\r\n          disabled={isDisabled}\r\n        >\r\n          Add Secondary Owner\r\n        </Button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\playgroundFieldArray2.js",["290","291","292"],"import React, { useCallback, useRef, useState, useEffect } from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport NestedArray from \"./playgroundNestedFieldArray\";\r\nimport { Form, Button, Segment, Divider } from \"semantic-ui-react\";\r\n\r\nexport default function Fields({ control, register, setValue, getValues }) {\r\n  const [dogName, setDogName] = useState(\"\");\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"dogs\",\r\n  });\r\n\r\n  const addDog = () => {\r\n    append({ name: \"append\" });\r\n  };\r\n\r\n  const handleDogName = () => {\r\n    const name = document.getElementById(\"dogName\").value;\r\n    console.log(name);\r\n    setDogName(name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    addDog();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {fields.map((item, index) => {\r\n          return (\r\n            <li key={item.id}>\r\n              <div>\r\n                <Segment color=\"purple\">\r\n                  <Divider horizontal>\r\n                    secondary owner(s) for Dog{\" \"}\r\n                    {dogName === \"\" ? index + 1 : dogName}\r\n                  </Divider>\r\n                  <NestedArray nestIndex={index} {...{ control, register }} />\r\n                </Segment>\r\n                <Segment color=\"violet\">\r\n                  <Divider horizontal>Dog {index + 1} INFORMATION</Divider>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registered name *\r\n                        <input\r\n                          id=\"dogName\"\r\n                          onChange={handleDogName}\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Registered name\"\r\n                          name={`dogs[${index}].registeredName`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Call name *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Call name\"\r\n                          name={`dogs[${index}].callName`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registration number *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"AKC number\"\r\n                          name={`dogs[${index}].akcNumber`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Microchip\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Microchip\"\r\n                          name={`dogs[${index}].microchip`}\r\n                          ref={register()}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Breed *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Breed\"\r\n                          name={`dogs[${index}].breed`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        DOB *\r\n                        <input\r\n                          required\r\n                          type=\"date\"\r\n                          placeholder=\"DOB\"\r\n                          name={`dogs[${index}].dob`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>{\" \"}\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Gender *\r\n                        <select\r\n                          required\r\n                          name={`dogs[${index}].gender`}\r\n                          ref={register({ required: true })}\r\n                        >\r\n                          <option value=\"\" disabled selected>\r\n                            Select Gender\r\n                          </option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                        </select>\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registration Papers *\r\n                        <select\r\n                          required\r\n                          name={`dogs[${index}].registrationPapers`}\r\n                          ref={register({ required: false })}\r\n                        >\r\n                          <option value=\"\" disabled selected>\r\n                            Select Registration Papers\r\n                          </option>\r\n                          <option value=\"AKC\">AKC</option>\r\n                          <option value=\"NGA\">NGA</option>\r\n                          <option value=\"AKC ILP\">AKC PAL</option>\r\n                          <option value=\"NALLA\">NALLA</option>\r\n                          <option value=\"CKC\">CKC</option>\r\n                          <option value=\"Other\"> Other</option>\r\n                          <option value=\"None\"> None added</option>\r\n                        </select>\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <input\r\n                      type=\"file\"\r\n                      name={`dogs[${index}].file`}\r\n                      ref={register({ required: false })}\r\n                      accept=\"image/jpeg, application/pdf\"\r\n                    />\r\n                  </Form.Group>{\" \"}\r\n                  <Button\r\n                    fluid\r\n                    basic\r\n                    color=\"blue\"\r\n                    type=\"button\"\r\n                    onClick={() => remove(index)}\r\n                  >\r\n                    Delete Dog\r\n                  </Button>\r\n                </Segment>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <section className=\"center-button-dog\">\r\n        <Button color=\"blue\" type=\"button\" onClick={addDog}>\r\n          Add Another Dog\r\n        </Button>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Registry\\Parts\\NestedRegistrationForm.js",["293","294","295"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storageRef } from \"../../../../firebase\";\r\nimport FieldArray from \"./playgroundFieldArray\";\r\nimport FieldArray2 from \"./playgroundFieldArray2\";\r\nimport { apiUrl } from \"../../../helpers/backend\";\r\nimport { Container, Header, Button, Form } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NestedRegistrationForm() {\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  // const toConfirm = async (data) => {\r\n  //   console.log(data);\r\n  //   history.push(\"/confirm\", { clubRegistration: data });\r\n  // };\r\n\r\n  const history = useHistory();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    history.push(\"/confirm\", { clubRegistration: data });\r\n\r\n    //   const transformedData = async () => {\r\n    //     const urlList = [];\r\n    //     for await (let dog of data.dogs) {\r\n    //       // console.log(dog);\r\n    //       if (dog.file === undefined || dog.file.length === 0) {\r\n    //         console.log(\"thing\");\r\n    //         urlList.push({ ...dog, akcPapersUrl: \"\" });\r\n    //       } else {\r\n    //         console.log(\"boo\");\r\n\r\n    //         // .then((res) => {\r\n    //         //   ;\r\n    //         // });\r\n    //         const uploadTask = await storageRef\r\n    //           .child(`dog/${dog.akcNumber}/${dog.file[0].name}`)\r\n    //           .put(dog.file[0]);\r\n\r\n    //         const akcPapersUrl = await uploadTask.ref.getDownloadURL();\r\n    //         urlList.push({ ...dog, akcPapersUrl });\r\n    //       }\r\n    //     }\r\n    //     console.log(urlList);\r\n    //     return urlList;\r\n    //   };\r\n\r\n    //   transformedData()\r\n    //     .then((res) => {\r\n    //       data = { ...data, transformed: res };\r\n    //       return data;\r\n    //     })\r\n    //     .then((res) => {\r\n    //       // console.log(res);\r\n    //       setTimeout(function () {\r\n    //         sendRegistration(res);\r\n    //       }, 500);\r\n    //     });\r\n    // };\r\n\r\n    // const sendRegistration = async (data) => {\r\n    //   // console.log(\"boo\");\r\n    //   const postData = await fetch(`${apiUrl}/api/registration`, {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //     body: JSON.stringify(data),\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container text>\r\n        <Header as=\"h1\">Owner and Dog Registration</Header>\r\n        <p>\r\n          Primary owners own all the added dogs and will be notified every time\r\n          a dog is registered for an event. Secondary owners can be customized\r\n          to the dog and also have the ability to register a dog for an event.\r\n          You can only add two secondary owners per dog.\r\n        </p>\r\n        <p>$15 per dog added</p>\r\n        <p>* fields are required</p>\r\n      </Container>\r\n      <div className=\"registration-container\">\r\n        {/* <form onSubmit={handleSubmit(onSubmit)}> */}\r\n\r\n        <Container>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <FieldArray\r\n              {...{ control, register, getValues, setValue, errors }}\r\n            />\r\n            <FieldArray2\r\n              {...{ control, register, getValues, setValue, errors }}\r\n            />\r\n            {/* <Button onClick={handleSubmit(toConfirm)}>Submit</Button> */}\r\n            <Button type=\"submit\"> Submit </Button>{\" \"}\r\n          </Form>{\" \"}\r\n        </Container>\r\n\r\n        {/* </form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NestedRegistrationForm;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\helpers\\backend.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\firebase.js",["296"],"import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAmX7NztIP6rSPxyI4MQZuucgyjw3poQWY\",\r\n  authDomain: \"cfs-racing-club.firebaseapp.com\",\r\n  databaseURL: \"https://cfs-racing-club-default-rtdb.firebaseio.com\",\r\n  projectId: \"cfs-racing-club\",\r\n  storageBucket: \"cfs-racing-club.appspot.com\",\r\n  messagingSenderId: \"398840133886\",\r\n  appId: \"1:398840133886:web:252f27385dba8acfe8cdaf\",\r\n  measurementId: \"G-L938VST90Z\",\r\n});\r\n\r\nconst storage = firebase.storage();\r\nconst storageRef = storage.ref();\r\n\r\nexport const uploadFile = async (path, name, file) => {\r\n  console.log(\"this far\");\r\n  const uploadTask = storageRef.child(`${path}/${name}`).put(file);\r\n  let url;\r\n  await uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n    url = downloadURL;\r\n  });\r\n  console.log(url);\r\n  return url;\r\n};\r\n\r\nexport { storageRef };\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Results\\Results.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\RegistrationModal.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\RegistrationEvent.js",["297","298","299","300","301"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport SanctionedRegistration from \"./SanctionedRegistration\";\r\nimport NonsanctionedRegistration from \"./NonsanctionedRegistration\";\r\n\r\nfunction RegistrationEvent(props) {\r\n  const [ifRegistered, setIfRegistered] = useState(true);\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className=\"registration-event\">\r\n      <Button color=\"black\" onClick={() => setIfRegistered(!ifRegistered)}>\r\n        {ifRegistered ? \"I do not have a sanction ID\" : \"I have a sanction ID\"}\r\n      </Button>\r\n      {ifRegistered ? (\r\n        <SanctionedRegistration\r\n          eventId={props.eventId}\r\n          sanctionedPrice={props.sanctionedPrice}\r\n        />\r\n      ) : (\r\n        <NonsanctionedRegistration\r\n          eventId={props.eventId}\r\n          unsanctionedPrice={props.unsanctionedPrice}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationEvent;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\SanctionedRegistration.js",["302","303","304"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Events\\Parts\\NonsanctionedRegistration.js",["305","306","307","308","309","310"],"import React, { useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Form,\r\n  Segment,\r\n  Label,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NonsanctionedRegistration(props) {\r\n  console.log(props);\r\n  const history = useHistory();\r\n  const { control, register, handleSubmit } = useForm();\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"dogs\",\r\n  });\r\n\r\n  const goRegister = () => {};\r\n\r\n  const addDog = () => {\r\n    append({ name: \"append\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addDog();\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    history.push(\"/confirm\", {\r\n      eventId: props.eventId,\r\n      nonsanctionedEventRegistration: data,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"nonsanctioned-registration\">\r\n      <p>Register for event</p>\r\n      <Segment vertical>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <h5>Owner Fields</h5>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                First Name\r\n                <input\r\n                  error\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"First name\"\r\n                  name={`owners.firstName`}\r\n                  ref={register({ required: true, maxLength: 80 })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Last Name\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Last name\"\r\n                  name={`owners.lastName`}\r\n                  ref={register({ required: true, maxLength: 100 })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Email\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  name={`owners.email`}\r\n                  ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Mobile Number\r\n                <input\r\n                  type=\"tel\"\r\n                  placeholder=\"Mobile number\"\r\n                  name={`owners.mobile`}\r\n                  ref={register({\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 12,\r\n                  })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Address Line 1\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address Line 1\"\r\n                  name={`owners.addressOne`}\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Address Line 2\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address Line 2\"\r\n                  name={`owners.addressTwo`}\r\n                  ref={register}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Zip Code\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Zip code\"\r\n                  name={`owners.zipCode`}\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                City\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  name={`owners.city`}\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                State\r\n                <select\r\n                  name={`owners.state`}\r\n                  ref={register({ required: true })}\r\n                >\r\n                  <option value=\"AL\">AL</option>\r\n                  <option value=\"AK\">AK</option>\r\n                  <option value=\"AS\">AS</option>\r\n                  <option value=\"AZ\">AZ</option>\r\n                  <option value=\"AR\">AR</option>\r\n                  <option value=\"CA\">CA</option>\r\n                  <option value=\"CO\">CO</option>\r\n                  <option value=\"CT\">CT</option>\r\n                  <option value=\"DE\">DE</option>\r\n                  <option value=\"DC\">DC</option>\r\n                  <option value=\"FM\">FM</option>\r\n                  <option value=\"FL\">FL</option>\r\n                  <option value=\"GA\">GA</option>\r\n                  <option value=\"GU\">GU</option>\r\n                  <option value=\"HI\">HI</option>\r\n                  <option value=\"ID\">ID</option>\r\n                  <option value=\"IL\">IL</option>\r\n                  <option value=\"IN\">IN</option>\r\n                  <option value=\"IA\">IA</option>\r\n                  <option value=\"KS\">KS</option>\r\n                  <option value=\"KY\">KY</option>\r\n                  <option value=\"LA\">LA</option>\r\n                  <option value=\"ME\">ME</option>\r\n                  <option value=\"MH\">MH</option>\r\n                  <option value=\"MD\">MD</option>\r\n                  <option value=\"MA\">MA</option>\r\n                  <option value=\"MI\">MI</option>\r\n                  <option value=\"MN\">MN</option>\r\n                  <option value=\"MS\">MS</option>\r\n                  <option value=\"MO\">MO</option>\r\n                  <option value=\"MT\">MT</option>\r\n                  <option value=\"NE\">NE</option>\r\n                  <option value=\"NV\">NV</option>\r\n                  <option value=\"NH\">NH</option>\r\n                  <option value=\"NJ\">NJ</option>\r\n                  <option value=\"NM\">NM</option>\r\n                  <option value=\"NY\">NY</option>\r\n                  <option value=\"NC\">NC</option>\r\n                  <option value=\"ND\">ND</option>\r\n                  <option value=\"MP\">MP</option>\r\n                  <option value=\"OH\">OH</option>\r\n                  <option value=\"OK\">OK</option>\r\n                  <option value=\"OR\">OR</option>\r\n                  <option value=\"PW\">PW</option>\r\n                  <option value=\"PA\">PA</option>\r\n                  <option value=\"PR\">PR</option>\r\n                  <option value=\"RI\">RI</option>\r\n                  <option value=\"SC\">SC</option>\r\n                  <option value=\"SD\">SD</option>\r\n                  <option value=\"TN\">TN</option>\r\n                  <option value=\"TX\">TX</option>\r\n                  <option value=\"UT\">UT</option>\r\n                  <option value=\"VT\">VT</option>\r\n                  <option value=\"VI\">VI</option>\r\n                  <option value=\"VA\">VA</option>\r\n                  <option value=\"WA\">WA</option>\r\n                  <option value=\"WV\">WV</option>\r\n                  <option value=\"WI\">WI</option>\r\n                  <option value=\"WY'\">WY'</option>\r\n                </select>\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <h5>Dog Fields</h5>\r\n          {fields.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Segment color=\"violet\">\r\n                  <Divider horizontal>Dog {index + 1} INFORMATION</Divider>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registered name *\r\n                        <input\r\n                          id=\"dogName\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Registered name\"\r\n                          name={`dogs[${index}].registeredName`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Call name *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Call name\"\r\n                          name={`dogs[${index}].callName`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registration number *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"AKC number\"\r\n                          name={`dogs[${index}].akcNumber`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Microchip\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Microchip\"\r\n                          name={`dogs[${index}].microchip`}\r\n                          ref={register()}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Breed *\r\n                        <input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Breed\"\r\n                          name={`dogs[${index}].breed`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        DOB *\r\n                        <input\r\n                          required\r\n                          type=\"date\"\r\n                          placeholder=\"DOB\"\r\n                          name={`dogs[${index}].dob`}\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </label>{\" \"}\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Gender *\r\n                        <select\r\n                          required\r\n                          name={`dogs[${index}].gender`}\r\n                          ref={register({ required: true })}\r\n                        >\r\n                          <option value=\"\" disabled selected>\r\n                            Select Gender\r\n                          </option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                        </select>\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    fluid\r\n                    basic\r\n                    color=\"blue\"\r\n                    type=\"button\"\r\n                    onClick={() => remove(index)}\r\n                  >\r\n                    Delete Dog\r\n                  </Button>\r\n                </Segment>\r\n              </div>\r\n            );\r\n          })}\r\n          <section className=\"center-button-dog\">\r\n            <Button color=\"blue\" type=\"button\" onClick={addDog}>\r\n              Add Another Dog\r\n            </Button>\r\n          </section>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NonsanctionedRegistration;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindDog.js",["311","312","313","314"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { apiUrl } from \"../helpers/backend\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"semantic-ui-react\";\r\nimport RenderDog from \"./RenderDog\";\r\n\r\nfunction FindDog() {\r\n  const [dog, setDog] = useState([]);\r\n  const [message, setMessage] = useState();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async (data) => {\r\n    const fetchDog = await fetch(`${apiUrl}/api/find/dog`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        data: JSON.stringify(data),\r\n      },\r\n    });\r\n    const response = fetchDog;\r\n\r\n    if (response.status === 200) {\r\n      const fetchResponse = await response.json();\r\n      setDog([JSON.parse(fetchResponse.message)]);\r\n    }\r\n    setMessage();\r\n    if (response.status === 400) {\r\n      const fetchResponse = await response.json();\r\n      setMessage(\"No dog found\");\r\n    }\r\n  };\r\n\r\n  const displayDog =\r\n    dog.length >= 1 && dog[0] !== undefined\r\n      ? dog[0] === undefined\r\n        ? null\r\n        : dog[0].map((d, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <RenderDog d={d} />\r\n              </div>\r\n            );\r\n          })\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"find-dog\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Find Dog by:\r\n                <select name=\"findDogs\" ref={register}>\r\n                  <option value=\"AKC Number * preferred\">\r\n                    AKC Number * preferred\r\n                  </option>\r\n                  <option value=\"registeredName\">Registered Name</option>\r\n                  <option value=\"callName\"> Call Name</option>\r\n                  <option value=\"id\"> ID</option>\r\n                  <option value=\"sanctionId\"> Sanction ID</option>\r\n                </select>\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Input\r\n                <input type=\"text\" name=\"dogItem\" ref={register} />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Container>{\" \"}\r\n        <p>{message}</p>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n\r\n      <div>{dog.length === 0 ? null : displayDog}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindDog;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindOwner.js",["315","316","317"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { apiUrl } from \"../helpers/backend\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"semantic-ui-react\";\r\n\r\nfunction FindDog() {\r\n  const [owner, setOwner] = useState([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const fetchOwner = await fetch(`${apiUrl}/api/find/owner`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        data: JSON.stringify(data),\r\n      },\r\n    });\r\n    const response = fetchOwner;\r\n\r\n    if (response.status === 200) {\r\n      const fetchResponse = await response.json();\r\n      console.log(fetchResponse);\r\n      setOwner([JSON.parse(fetchResponse.message)]);\r\n    }\r\n    if (response.status === 400) {\r\n      const fetchResponse = await response.json();\r\n      console.log(fetchResponse);\r\n    }\r\n  };\r\n\r\n  const displayOwner = owner.map((o) => {\r\n    console.log(o);\r\n    return (\r\n      <ul>\r\n        <li>Full name: {o.fullName}</li>\r\n        <li>Email: {o.email}</li>\r\n        <li>\r\n          Is email validated?{\" \"}\r\n          {o.emailValid ? \"Email is validated\" : \"Email yet to be validated\"}\r\n        </li>\r\n        <li>Owner ID: {o.id}</li>\r\n        <li>Mobile phone number: {o.phoneNumberMobile}</li>\r\n        <li>Home phone number: {o.phoneNumberLandline}</li>\r\n        <li>\r\n          Address: {o.address} {o.city}, {o.state} {o.zipCode}{\" \"}\r\n        </li>\r\n\r\n        <li>\r\n          Dog Ids:{\" \"}\r\n          {\r\n            <ol>\r\n              {o.dogIds.map((id) => {\r\n                return <li>{id}</li>;\r\n              })}\r\n            </ol>\r\n          }\r\n        </li>\r\n      </ul>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"find-owner\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Owner type:\r\n                <select name=\"findOwnerType\" ref={register}>\r\n                  <option value=\"primary\">Primary</option>\r\n                  <option value=\"secondary\">Secondary</option>\r\n                </select>\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Find owner by:\r\n                <select name=\"findOwner\" ref={register}>\r\n                  <option value=\"email\">Email * preferred</option>\r\n                  <option value=\"id\"> ID</option>\r\n                </select>\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Input\r\n                <input type=\"text\" name=\"ownerItem\" ref={register} />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n        </Container>{\" \"}\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n      <div>{owner !== undefined ? displayOwner : null}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindDog;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\EventPage.js",["318","319"],"import React, { useEffect, useState } from \"react\";\r\nimport DisplayImg from \"./DisplayImg\";\r\nimport RegisterForEvent from \"./RegisterForEvent\";\r\nimport { format, addDays } from \"date-fns\";\r\nimport { apiUrl } from \"../../helpers/backend\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EventPage(props) {\r\n  const [events, setEvents] = useState([]);\r\n  const fetchEvents = async () => {\r\n    const getRequest = await fetch(`${apiUrl}/api/events`);\r\n\r\n    const response = await getRequest.json();\r\n    const responseParsed = JSON.parse(response.events);\r\n    setEvents([responseParsed]);\r\n  };\r\n\r\n  const id = props.match.params.eventId;\r\n\r\n  const event =\r\n    events[0] !== undefined\r\n      ? events[0].find((one) => id === one.eventId)\r\n      : undefined;\r\n\r\n  console.log(event);\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n  return (\r\n    <div className=\"event-page\">\r\n      <div className=\"container\">\r\n        <div className=\"frame\">\r\n          <div className=\"title-bundle\">\r\n            <div className=\"caption\">\r\n              <h2>{event !== undefined ? event.eventName : null}</h2>\r\n            </div>\r\n            <h5>\r\n              {event !== undefined\r\n                ? format(addDays(new Date(event.startDate), 1), \"MMM do\")\r\n                : null}\r\n            </h5>\r\n          </div>\r\n          <div>\r\n            {event !== undefined ? (\r\n              event.pdfUrl !== undefined ? (\r\n                event.startDate === \"2021-01-24\" ? null : (\r\n                  <RegisterForEvent\r\n                    id={event.eventId}\r\n                    sanctionedPrice={event.sanctionedPrice}\r\n                    unsanctionedPrice={event.unsanctionedPrice}\r\n                  />\r\n                )\r\n              ) : null\r\n            ) : null}\r\n          </div>\r\n          <div className=\"title-bundle\">\r\n            <h5>\r\n              {event !== undefined ? (\r\n                event.pdfUrl !== undefined ? (\r\n                  <DisplayImg pdfUrl={event.pdfUrl} />\r\n                ) : (\r\n                  \"More Information Coming Soon!\"\r\n                )\r\n              ) : null}\r\n            </h5>\r\n          </div>\r\n          {event !== undefined ? (\r\n            event.pdfUrl !== undefined ? (\r\n              <a href={event.pdfUrl} target=\"_blank\" download>\r\n                <Button>Download Premium</Button>\r\n              </a>\r\n            ) : null\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventPage;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\RegisterEvent.js",["320","321"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { apiUrl } from \"../helpers/backend\";\r\nimport { Form, Button, Container } from \"semantic-ui-react\";\r\n\r\nfunction RegisterEvent() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    const postEvent = fetch(`${apiUrl}/api/create/event`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-event\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Event name:\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  name=\"eventName\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Event start date:\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"Start date\"\r\n                  name=\"startDate\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterEvent;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\FindEvent.js",["322","323"],"import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../helpers/backend\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { format, addDays } from \"date-fns\";\r\nimport { Form, Button, Container } from \"semantic-ui-react\";\r\nimport { storageRef } from \"../../firebase\";\r\n\r\nfunction FindEvent() {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState();\r\n  const fetchEvents = async () => {\r\n    const getRequest = await fetch(`${apiUrl}/api/events`);\r\n\r\n    const response = await getRequest.json();\r\n    const responseParsed = JSON.parse(response.events);\r\n    setEvents([responseParsed]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const sortedOptions = (arr) => {\r\n    console.log(arr);\r\n    let temp;\r\n    if (arr !== undefined) {\r\n      for (let i = arr.length - 1; i > 0; i--) {\r\n        for (let j = 0; j < i; j++) {\r\n          if (\r\n            new Date(arr[j].startDate).getTime() >\r\n            new Date(arr[j + 1].startDate).getTime()\r\n          ) {\r\n            temp = arr[j];\r\n            arr[j] = arr[j + 1];\r\n            arr[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //\r\n  };\r\n\r\n  sortedOptions(events[0]);\r\n  console.log(events[0]);\r\n\r\n  const eventsOptions =\r\n    events[0] !== undefined\r\n      ? events[0].map((option) => {\r\n          return (\r\n            <option key={option.eventId} value={option.eventId}>\r\n              {option.eventName},{\" \"}\r\n              {format(addDays(new Date(option.startDate), 1), \"MMM dd\")}{\" \"}\r\n            </option>\r\n          );\r\n        })\r\n      : null;\r\n\r\n  const handleOptionChange = () => {\r\n    const select = document.getElementById(\"eventOption\");\r\n    const theEvent = events[0].find((event) => select.value === event.eventId);\r\n    setSelectedEvent(theEvent);\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    if (data.eventPdf === undefined || data.eventPdf.length === 0) {\r\n      console.log(\"hello\");\r\n    } else {\r\n      //code to upload eventjpg\r\n      const uploadTask = await storageRef\r\n        .child(`${data.eventPdf[0].name}`)\r\n        .put(data.eventPdf[0]);\r\n\r\n      uploadTask.ref.getDownloadURL().then((res) => {\r\n        data = { ...data, pdfUrl: res };\r\n        updateEvent(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateEvent = async (data) => {\r\n    console.log(data);\r\n    const sendEvent = await fetch(`${apiUrl}/api/update/event`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"find-event\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <Form.Field>\r\n            <label>\r\n              Choose Event:\r\n              <select\r\n                id=\"eventOption\"\r\n                name=\"eventOption\"\r\n                onChange={handleOptionChange}\r\n                ref={register}\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select Event\r\n                </option>\r\n                {events[0] !== undefined ? eventsOptions : null}\r\n              </select>\r\n            </label>\r\n          </Form.Field>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Event name:\r\n                <input\r\n                  defaultValue={\r\n                    selectedEvent !== undefined ? selectedEvent.eventName : null\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  name=\"eventName\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Event start date:\r\n                <input\r\n                  defaultValue={\r\n                    selectedEvent !== undefined ? selectedEvent.startDate : null\r\n                  }\r\n                  type=\"date\"\r\n                  placeholder=\"Start date\"\r\n                  name=\"startDate\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            {/* <Form.Field>\r\n              <label>\r\n                Event end date:\r\n                <input\r\n                  defaultValue={\r\n                    selectedEvent !== undefined ? selectedEvent.endDate : null\r\n                  }\r\n                  type=\"date\"\r\n                  placeholder=\"End date\"\r\n                  name=\"endDate\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field> */}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <label>\r\n                Price of Sanctioned Dog Registration:\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Sanctioned Price\"\r\n                  name=\"sanctionedPrice\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Price of Unsanctioned Dog Registration:\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Unsanctioned Price\"\r\n                  name=\"unsanctionedPrice\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          {/* <Form.Group widths=\"equal\"> */}\r\n          {/* <Form.Field>\r\n              <label>\r\n                Event address:\r\n                <input\r\n                  defaultValue={\r\n                    selectedEvent !== undefined\r\n                      ? selectedEvent.eventAddress\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Event description:\r\n                <input\r\n                  defaultValue={\r\n                    selectedEvent !== undefined\r\n                      ? selectedEvent.eventDescription\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  placeholder=\"Description\"\r\n                  name=\"description\"\r\n                  ref={register}\r\n                />\r\n              </label>\r\n            </Form.Field> */}\r\n          {/* </Form.Group> */}\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                {\" \"}\r\n                Add .pdf file\r\n                <input\r\n                  ref={register}\r\n                  name=\"eventPdf\"\r\n                  type=\"file\"\r\n                  accept=\"application/pdf\"\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            {/* <Form.Field>\r\n              <label>\r\n                {\" \"}\r\n                Add .pdf file\r\n                <input\r\n                  ref={register}\r\n                  name=\"eventPdf\"\r\n                  type=\"file\"\r\n                  accept=\"application/pdf\"\r\n                />\r\n              </label>\r\n            </Form.Field> */}\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindEvent;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\DisplayImg.js",["324"],"import React from \"react\";\r\n\r\nfunction DisplayImg(props) {\r\n  console.log(props);\r\n  const pdf = props.pdfUrl;\r\n  console.log(pdf);\r\n  return (\r\n    <div className=\"display-image\">\r\n      <iframe\r\n        src={`https://docs.google.com/gview?url=${pdf}&embedded=true`}\r\n        style={{\r\n          width: \"100%\",\r\n          minHeight: \"500px\",\r\n        }}\r\n        frameBorder=\"0\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayImg;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\EventPage\\RegisterForEvent.js",[],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\VerifyEmail\\VerifyEmail.js",["325"],"import React, { useEffect, useState } from \"react\";\r\nimport { apiUrl } from \"../../helpers/backend\";\r\n\r\nfunction VerifyEmail(props) {\r\n  const token = props.match.params.verificationToken;\r\n\r\n  const [message, setMessage] = useState();\r\n\r\n  const verifyEmail = async (token) => {\r\n    const sendToken = await fetch(`${apiUrl}/api/verify/email`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        token: JSON.stringify(token),\r\n      },\r\n    });\r\n    const response = await sendToken.json();\r\n    if (response.status === 200) {\r\n      setMessage(response.message);\r\n    } else {\r\n      setMessage(response.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyEmail(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"verify-email\">\r\n      <div className=\"container\">\r\n        <div className=\"frame\">\r\n          <h2>{message}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerifyEmail;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Hidden\\RenderDog.js",["326","327"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storageRef } from \"../../firebase\";\r\nimport { Form, Button, Checkbox, Segment } from \"semantic-ui-react\";\r\nimport { apiUrl } from \"../helpers/backend\";\r\n\r\nfunction RenderDog(props) {\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [message, setMessage] = useState();\r\n  const dog = props.d;\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    if (data.akcNumber === undefined) {\r\n      setMessage(\"Please toggle to edit\");\r\n    } else {\r\n      if (data.file === undefined || data.file.length === 0) {\r\n        console.log(data);\r\n        setMessage();\r\n        const toSend = async () => {\r\n          const sendUpdate = fetch(`${apiUrl}/api/update/dog`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n\r\n          const response = await sendUpdate;\r\n          if (response.status === 200) {\r\n            const fetchResponse = await response.json();\r\n            console.log(fetchResponse.message);\r\n            setMessage(fetchResponse.message);\r\n          }\r\n        };\r\n\r\n        toSend();\r\n      } else {\r\n        const url = async () => {\r\n          //   console.log(\"here\");\r\n          const uploadTask = await storageRef\r\n            .child(`dog/${data.akcNumber}/${data.file[0].name}`)\r\n            .put(data.file[0]);\r\n\r\n          uploadTask.ref\r\n            .getDownloadURL()\r\n            .then((res) => {\r\n              data = { ...data, registrationPapersUrl: res };\r\n              return data;\r\n            })\r\n            .then((res) => {\r\n              //copied from above, ideally seperate into seperate function\r\n              const toSend = async () => {\r\n                const sendUpdate = fetch(`${apiUrl}/api/update/dog`, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify(data),\r\n                });\r\n                const response = await sendUpdate;\r\n                console.log(response);\r\n\r\n                if (response.status === 200) {\r\n                  const fetchResponse = await response.json();\r\n                  console.log(fetchResponse.message);\r\n                  setMessage(fetchResponse.message);\r\n                }\r\n              };\r\n\r\n              toSend();\r\n            });\r\n        };\r\n\r\n        url();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDisabled = () => {\r\n    setIsDisabled(!isDisabled);\r\n  };\r\n\r\n  const onDelete = async (data) => {\r\n    if (data.akcNumber === undefined) {\r\n      setMessage(\"Please toggle to delete\");\r\n    } else {\r\n      const deleteDog = fetch(`${apiUrl}/api/delete/dog`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ akcNumber: data.akcNumber }),\r\n      });\r\n      const response = await deleteDog;\r\n\r\n      if (response.status === 200) {\r\n        setMessage(\"Dog successfully deleted!\");\r\n      } else {\r\n        setMessage(\"Dog not deleted.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div key={dog.id} className=\"render-dog\">\r\n      <Segment>\r\n        <p>\r\n          <strong>{dog.registeredName}</strong>\r\n        </p>\r\n        <p>Toggle to edit fields or delete dog</p>{\" \"}\r\n        <Checkbox toggle onChange={handleDisabled} />\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Registered name\r\n                <input\r\n                  defaultValue={dog.registeredName}\r\n                  type=\"text\"\r\n                  placeholder=\"Registered Name\"\r\n                  name=\"registeredName\"\r\n                  ref={register}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Call Name\r\n                <input\r\n                  defaultValue={dog.callName}\r\n                  type=\"text\"\r\n                  placeholder=\"Call Name\"\r\n                  name=\"callName\"\r\n                  ref={register}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                AKC Number\r\n                <input\r\n                  defaultValue={dog.akcNumber}\r\n                  type=\"text\"\r\n                  placeholder=\"AKC Number\"\r\n                  name=\"akcNumber\"\r\n                  ref={register}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Sanction ID\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Sanction ID\"\r\n                  name=\"sanctionId\"\r\n                  ref={register}\r\n                  defaultValue={dog.sanctionId}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Dog ID\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"id\"\r\n                  name=\"id\"\r\n                  ref={register}\r\n                  defaultValue={dog.id}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                Registration Status\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Registration Status\"\r\n                  name=\"registered\"\r\n                  ref={register}\r\n                  defaultValue={\r\n                    dog.registered ? \"Registered\" : \"Not registered\"\r\n                  }\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <label>\r\n                Registration Papers\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Registration Papers\"\r\n                  name=\"registrationPapersTypeP\"\r\n                  ref={register}\r\n                  defaultValue={dog.registrationPapersType}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            {dog.registrationPapersUrl === \"\" ? (\r\n              <Form.Field>\r\n                <label>\r\n                  Upload Registration Papers\r\n                  <input type=\"file\" name=\"file\" ref={register} />\r\n                </label>\r\n              </Form.Field>\r\n            ) : (\r\n              <Button>\r\n                <a href={dog.registrationPapersUrl} target=\"_blank\" download>\r\n                  Download Registration Papers\r\n                </a>\r\n              </Button>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <label>\r\n              Primary Owner IDs\r\n              <ol>\r\n                {dog.primaryIds.map((id, index) => {\r\n                  return (\r\n                    <Form.Field key={index}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Primary ID\"\r\n                        name={`primaryIds[${index}]`}\r\n                        ref={register}\r\n                        defaultValue={id}\r\n                        disabled={isDisabled}\r\n                      />\r\n                    </Form.Field>\r\n                  );\r\n                })}\r\n              </ol>\r\n            </label>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <label>\r\n              Secondary Owner IDs\r\n              <ol>\r\n                {dog.secondaryIds === null || dog.secondaryIds.length === 0\r\n                  ? \"No secondary owners\"\r\n                  : dog.secondaryIds.map((id, index) => {\r\n                      return (\r\n                        <Form.Field key={index}>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Secondary ID\"\r\n                            name={`secondaryIds[${index}]`}\r\n                            ref={register}\r\n                            defaultValue={id}\r\n                            disabled={isDisabled}\r\n                          />\r\n                        </Form.Field>\r\n                      );\r\n                    })}\r\n              </ol>\r\n            </label>\r\n          </Form.Group>\r\n          <Button.Group>\r\n            <Button negative onClick={handleSubmit(onDelete)}>\r\n              Delete{\" \"}\r\n            </Button>\r\n            <Button.Or />\r\n            <Button type=\"submit\" positive>\r\n              Submit Changes\r\n            </Button>\r\n          </Button.Group>\r\n          <p>{message}</p>\r\n        </Form>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderDog;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\ConfirmationPage.js",["328","329"],"C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\ClubRegistrationConfirmation.js",["330","331","332","333","334","335","336","337","338","339"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { format } from \"date-fns\";\r\nimport { storageRef } from \"../../../firebase\";\r\nimport { apiUrl } from \"../../helpers/backend\";\r\n\r\nfunction ClubRegistrationConfirmation(props) {\r\n  console.log(props);\r\n  const success = props.success;\r\n  const owners = props.data.owners;\r\n  const dogs = props.data.dogs;\r\n  const secondary = props.data.dogOwner;\r\n  const handleNumDogs = props.handleNumDogs;\r\n  console.log(owners, dogs, secondary);\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [theData, setTheData] = useState({ data: props.data });\r\n  console.log(theData);\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"dogs\",\r\n  });\r\n\r\n  if (success) {\r\n    console.log(\"success\");\r\n    const transformedData = async () => {\r\n      const urlList = [];\r\n      for await (let dog of theData.data.dogs) {\r\n        console.log(dog);\r\n        if (dog.file === undefined || dog.file.length === 0) {\r\n          console.log(\"thing\");\r\n          urlList.push({ ...dog, akcPapersUrl: \"\" });\r\n        } else {\r\n          console.log(\"boo\");\r\n\r\n          //   .then((res) => {\r\n          //     ;\r\n          //   });\r\n          const uploadTask = await storageRef\r\n            .child(`dog/${dog.akcNumber}/${dog.file[0].name}`)\r\n            .put(dog.file[0]);\r\n\r\n          const akcPapersUrl = await uploadTask.ref.getDownloadURL();\r\n          urlList.push({ ...dog, akcPapersUrl });\r\n        }\r\n      }\r\n      console.log(urlList);\r\n      return urlList;\r\n    };\r\n\r\n    transformedData()\r\n      .then((res) => {\r\n        const data = { ...theData.data, transformed: res };\r\n        return data;\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setTimeout(function () {\r\n          sendRegistration(res);\r\n        }, 500);\r\n      });\r\n    //  };\r\n\r\n    const sendRegistration = async (data) => {\r\n      console.log(\"boo\");\r\n      const postData = await fetch(`${apiUrl}/api/registration`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (form) => {\r\n    if (isDisabled === false) {\r\n      console.log(form.owners, form.dogs, form.dogOwner);\r\n      //   handleNumDogs(data.dogs.length);\r\n      setTheData({\r\n        data: {\r\n          dogs: form.dogs,\r\n          owners: form.owners,\r\n          secondary: form.dogOwner,\r\n        },\r\n      });\r\n    } else {\r\n      console.log({ data: { owners, dogs, secondary } });\r\n      setTheData({ data: { owners, dogs, secondary } });\r\n    }\r\n  };\r\n\r\n  const removeDisabled = () => {\r\n    setIsDisabled(!isDisabled);\r\n  };\r\n\r\n  const amountOfDogs = dogs.length;\r\n  const paymentAmount = 15.0 * amountOfDogs;\r\n\r\n  return (\r\n    <div className=\"club-registration-confirmation\">\r\n      <div className=\"container\">\r\n        <div className=\"frame\">\r\n          <Header as=\"h1\">Confirmation for Club Sanction Application</Header>{\" \"}\r\n          <Form onChange={handleSubmit(onSubmit)}>\r\n            <Header as=\"h2\">Primary Owner Information</Header>\r\n            {owners.map((owner, index) => {\r\n              return (\r\n                <Segment>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        First name{\" \"}\r\n                        <input\r\n                          defaultValue={owner.firstName}\r\n                          type=\"text\"\r\n                          placeholder=\"First name\"\r\n                          disabled={isDisabled}\r\n                          name={`owners[${index}].firstName`}\r\n                          ref={register({ required: true, maxLength: 80 })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Last name\r\n                        <input\r\n                          defaultValue={owner.lastName}\r\n                          type=\"text\"\r\n                          placeholder=\"Last name\"\r\n                          disabled={isDisabled}\r\n                          name={`owners[${index}].lastName`}\r\n                          ref={register({ required: true, maxLength: 100 })}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Field>\r\n                    <label>\r\n                      Email{\" \"}\r\n                      <input\r\n                        defaultValue={owner.email}\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name={`owners[${index}].email`}\r\n                        ref={register({\r\n                          required: true,\r\n                          pattern: /^\\S+@\\S+$/i,\r\n                        })}\r\n                        disabled={isDisabled}\r\n                      />\r\n                    </label>\r\n                  </Form.Field>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Mobile number{\" \"}\r\n                        <input\r\n                          defaultValue={owner.mobile}\r\n                          type=\"tel\"\r\n                          placeholder=\"Mobile number\"\r\n                          name={`owners[${index}].mobile`}\r\n                          ref={register({\r\n                            required: true,\r\n                            minLength: 6,\r\n                            maxLength: 12,\r\n                          })}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Home phone number{\" \"}\r\n                        <input\r\n                          defaultValue={owner.landline}\r\n                          type=\"tel\"\r\n                          placeholder=\"Landline\"\r\n                          name={`owners[${index}].landline`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Address Line 1{\" \"}\r\n                        <input\r\n                          defaultValue={owner.addressOne}\r\n                          type=\"text\"\r\n                          placeholder=\"Address Line 1\"\r\n                          name={`owners[${index}].addressOne`}\r\n                          ref={register({ required: true })}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Address Line 2{\" \"}\r\n                        <input\r\n                          defaultValue={owner.addressTwo}\r\n                          type=\"text\"\r\n                          placeholder=\"Address Line 2\"\r\n                          name={`owners[${index}].addressTwo`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Zip code{\" \"}\r\n                        <input\r\n                          defaultValue={owner.zipCode}\r\n                          type=\"number\"\r\n                          placeholder=\"Zip code\"\r\n                          name={`owners[${index}].zipCode`}\r\n                          ref={register({ required: true })}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        City{\" \"}\r\n                        <input\r\n                          defaultValue={owner.city}\r\n                          type=\"text\"\r\n                          placeholder=\"City\"\r\n                          name={`owners[${index}].city`}\r\n                          ref={register({ required: true })}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        State{\" \"}\r\n                        <input\r\n                          defaultValue={owner.state}\r\n                          type=\"text\"\r\n                          placeholder=\"State\"\r\n                          name={`owners[${index}].state`}\r\n                          ref={register({ required: true })}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                </Segment>\r\n              );\r\n            })}\r\n            <Header as=\"h2\">Dog Information</Header>\r\n            {dogs.map((dog, index) => {\r\n              return (\r\n                <Segment>\r\n                  <p>\r\n                    <strong>{dog.registeredName}</strong>\r\n                  </p>\r\n\r\n                  {/* placeholder */}\r\n                  {secondary ? (\r\n                    <Header as=\"h5\">\r\n                      {dog.registeredName}'s Secondary Owner(s)\r\n                    </Header>\r\n                  ) : null}\r\n                  {secondary\r\n                    ? secondary.map((owner) => {\r\n                        return owner.secondary.map((own, k) => {\r\n                          return secondary.indexOf(owner) === index ? (\r\n                            <Segment>\r\n                              <Form.Group widths=\"equal\">\r\n                                <Form.Field>\r\n                                  <label>\r\n                                    First name{\" \"}\r\n                                    <input\r\n                                      defaultValue={own.firstName}\r\n                                      type=\"text\"\r\n                                      placeholder=\"First name\"\r\n                                      name={`dogOwner[${index}].secondary[${k}].firstName`}\r\n                                      ref={register({\r\n                                        required: true,\r\n                                        maxLength: 80,\r\n                                      })}\r\n                                      disabled={isDisabled}\r\n                                    />\r\n                                  </label>\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                  <label>\r\n                                    Last name{\" \"}\r\n                                    <input\r\n                                      defaultValue={own.lastName}\r\n                                      type=\"text\"\r\n                                      placeholder=\"Last name\"\r\n                                      name={`dogOwner[${index}].secondary[${k}].lastName`}\r\n                                      ref={register({\r\n                                        required: true,\r\n                                        maxLength: 100,\r\n                                      })}\r\n                                      disabled={isDisabled}\r\n                                    />\r\n                                  </label>\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                  <label>\r\n                                    Email\r\n                                    <input\r\n                                      defaultValue={own.email}\r\n                                      type=\"text\"\r\n                                      placeholder=\"Email\"\r\n                                      name={`dogOwner[${index}].secondary[${k}].email`}\r\n                                      ref={register({\r\n                                        required: true,\r\n                                        pattern: /^\\S+@\\S+$/i,\r\n                                      })}\r\n                                      disabled={isDisabled}\r\n                                    />\r\n                                  </label>\r\n                                </Form.Field>\r\n                              </Form.Group>\r\n                            </Segment>\r\n                          ) : null;\r\n                        });\r\n                      })\r\n                    : null}\r\n\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registered name\r\n                        <input\r\n                          defaultValue={dog.registeredName}\r\n                          type=\"text\"\r\n                          placeholder=\"Registered Name\"\r\n                          name={`dogs[${index}].registeredName`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Call Name\r\n                        <input\r\n                          defaultValue={dog.callName}\r\n                          type=\"text\"\r\n                          placeholder=\"Call Name\"\r\n                          name={`dogs[${index}].callName`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        AKC Number\r\n                        <input\r\n                          defaultValue={dog.akcNumber}\r\n                          type=\"text\"\r\n                          placeholder=\"AKC Number\"\r\n                          name={`dogs[${index}].akcNumber`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Microchip\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Microchip\"\r\n                          name={`dogs[${index}].microchip`}\r\n                          ref={register}\r\n                          defaultValue={\r\n                            dog.microchip === \"\"\r\n                              ? \"No microchip added\"\r\n                              : dog.microchip\r\n                          }\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Gender\r\n                        <input\r\n                          defaultValue={dog.gender}\r\n                          type=\"text\"\r\n                          placeholder=\"Gender\"\r\n                          name={`dogs[${index}].gender`}\r\n                          ref={register}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>\r\n                        Breed\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Breed\"\r\n                          name={`dogs[${index}].breed`}\r\n                          ref={register}\r\n                          defaultValue={dog.breed}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                      <label>\r\n                        DOB\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"DOB\"\r\n                          name={`dogs[${index}].dob`}\r\n                          ref={register}\r\n                          defaultValue={format(\r\n                            new Date(dog.dob),\r\n                            \"MMM do yyyy\"\r\n                          )}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field>\r\n                      <label>\r\n                        Registration Papers\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Registration Papers\"\r\n                          name={`dogs[${index}].registrationPapers`}\r\n                          ref={register}\r\n                          defaultValue={dog.registrationPapers}\r\n                          disabled={isDisabled}\r\n                        />\r\n                      </label>\r\n                    </Form.Field>\r\n                    {dog.file.length === 0 ? (\r\n                      isDisabled === true ? (\r\n                        <Form.Field>\r\n                          <label>\r\n                            Registration Papers\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Registration Papers\"\r\n                              name=\"registrationPapersAdded\"\r\n                              ref={register}\r\n                              defaultValue=\"No registration papers added\"\r\n                              disabled={isDisabled}\r\n                            />\r\n                          </label>\r\n                        </Form.Field>\r\n                      ) : (\r\n                        <Form.Field>\r\n                          <label>\r\n                            Registration Papers\r\n                            <input\r\n                              type=\"file\"\r\n                              placeholder=\"Registration Papers\"\r\n                              name={`dogs[${index}].file`}\r\n                              ref={register}\r\n                              defaultValue=\"No registration papers added\"\r\n                              disabled={isDisabled}\r\n                            />\r\n                          </label>\r\n                        </Form.Field>\r\n                      )\r\n                    ) : (\r\n                      <Form.Field>\r\n                        <label>\r\n                          Registration Papers\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Registration Papers\"\r\n                            name=\"file\"\r\n                            ref={register}\r\n                            defaultValue={dog.file[0].name}\r\n                            disabled={isDisabled}\r\n                          />\r\n                        </label>\r\n                      </Form.Field>\r\n                    )}\r\n                  </Form.Group>\r\n                </Segment>\r\n              );\r\n            })}{\" \"}\r\n            <Button.Group>\r\n              <Button negative onClick={removeDisabled}>\r\n                Edit\r\n              </Button>\r\n            </Button.Group>\r\n          </Form>\r\n          <div id=\"paypal-button-container\"></div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClubRegistrationConfirmation;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\SanctionedEventRegistration.js",["340","341","342","343","344","345"],"import React from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Button,\r\n  Form,\r\n  Segment,\r\n  Label,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport { apiUrl } from \"../../helpers/backend\";\r\n\r\nfunction SanctionedEventRegistration(props) {\r\n  console.log(props);\r\n  const addedDogs = props.data;\r\n  console.log(addedDogs);\r\n\r\n  if (props.success === true) {\r\n    console.log(\"almost\");\r\n    const sendData = async () => {\r\n      console.log(\"this far\");\r\n      const postDog = await fetch(`${apiUrl}/api/event/add/sanctioned`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ addedDogs: addedDogs, eventId: props.eventId }),\r\n      });\r\n    };\r\n    sendData();\r\n  }\r\n  return (\r\n    <div className=\"sanctioned-event-registration\">\r\n      {addedDogs.length !== 0 ? (\r\n        <Segment>\r\n          <p>\r\n            <strong>Added Dogs:</strong>\r\n          </p>\r\n          <Table basic=\"very\" collapsing padded columns={4}>\r\n            <Table.Row>\r\n              <Table.HeaderCell>\r\n                <p>\r\n                  <strong>Call Name</strong>\r\n                </p>\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>\r\n                <p>\r\n                  <strong>Sanction ID</strong>\r\n                </p>\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n            <Table.Body>\r\n              {addedDogs.map((dog) => {\r\n                return (\r\n                  <Table.Row>\r\n                    <Table.Cell>\r\n                      <p>{dog.callName !== undefined ? dog.callName : null}</p>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <p>{dog.sanctionId}</p>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n          {/* <Button.Group>\r\n            <Button onClick={resetAddedDogs}>Reset</Button>\r\n            <Button.Or />\r\n            <Button onClick={onSubmit}>Submit</Button>\r\n          </Button.Group> */}\r\n        </Segment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SanctionedEventRegistration;\r\n","C:\\Users\\psyck\\Desktop\\professional\\Upwork\\Don Jenkins\\central florida sighthound club\\club-frontend\\src\\Components\\Pages\\Confirmation Page\\UnsanctionedEventRegistration.js",["346","347","348","349","350","351","352"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { format } from \"date-fns\";\r\nimport { apiUrl } from \"../../helpers/backend\";\r\n\r\nfunction UnsanctionedEventRegistration(props) {\r\n  //   console.log(props.location.state);\r\n  console.log(props);\r\n  const [owners, setOwner] = useState([props.owners]);\r\n  const [dogs, setDogs] = useState(props.dogs);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (form) => {\r\n    setOwner(form.owners);\r\n    setDogs(form.dogs);\r\n  };\r\n\r\n  const removeDisabled = () => {\r\n    setIsDisabled(!isDisabled);\r\n  };\r\n\r\n  if (props.success) {\r\n    const sendInfo = async () => {\r\n      const postDog = await fetch(`${apiUrl}/api/event/add/unsanctioned`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          owners: owners,\r\n          dogs: dogs,\r\n          eventId: props.eventId,\r\n        }),\r\n      });\r\n    };\r\n    sendInfo();\r\n  }\r\n\r\n  return (\r\n    <Form onChange={handleSubmit(onSubmit)}>\r\n      <Header as=\"h2\">Primary Owner Information</Header>\r\n      {owners.map((owner, index) => {\r\n        return (\r\n          <Segment>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  First name{\" \"}\r\n                  <input\r\n                    defaultValue={owner.firstName}\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    disabled={isDisabled}\r\n                    name={`owners[${index}].firstName`}\r\n                    ref={register({ required: true, maxLength: 80 })}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Last name\r\n                  <input\r\n                    defaultValue={owner.lastName}\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    disabled={isDisabled}\r\n                    name={`owners[${index}].lastName`}\r\n                    ref={register({ required: true, maxLength: 100 })}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Field>\r\n              <label>\r\n                Email{\" \"}\r\n                <input\r\n                  defaultValue={owner.email}\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  name={`owners[${index}].email`}\r\n                  ref={register({\r\n                    required: true,\r\n                    pattern: /^\\S+@\\S+$/i,\r\n                  })}\r\n                  disabled={isDisabled}\r\n                />\r\n              </label>\r\n            </Form.Field>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Mobile number{\" \"}\r\n                  <input\r\n                    defaultValue={owner.mobile}\r\n                    type=\"tel\"\r\n                    placeholder=\"Mobile number\"\r\n                    name={`owners[${index}].mobile`}\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 6,\r\n                      maxLength: 12,\r\n                    })}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Address Line 1{\" \"}\r\n                  <input\r\n                    defaultValue={owner.addressOne}\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 1\"\r\n                    name={`owners[${index}].addressOne`}\r\n                    ref={register({ required: true })}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Address Line 2{\" \"}\r\n                  <input\r\n                    defaultValue={owner.addressTwo}\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 2\"\r\n                    name={`owners[${index}].addressTwo`}\r\n                    ref={register}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Zip code{\" \"}\r\n                  <input\r\n                    defaultValue={owner.zipCode}\r\n                    type=\"number\"\r\n                    placeholder=\"Zip code\"\r\n                    name={`owners[${index}].zipCode`}\r\n                    ref={register({ required: true })}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  City{\" \"}\r\n                  <input\r\n                    defaultValue={owner.city}\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    name={`owners[${index}].city`}\r\n                    ref={register({ required: true })}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  State{\" \"}\r\n                  <input\r\n                    defaultValue={owner.state}\r\n                    type=\"text\"\r\n                    placeholder=\"State\"\r\n                    name={`owners[${index}].state`}\r\n                    ref={register({ required: true })}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n          </Segment>\r\n        );\r\n      })}\r\n      <Header as=\"h2\">Dog Information</Header>\r\n      {dogs.map((dog, index) => {\r\n        return (\r\n          <Segment>\r\n            <p>\r\n              <strong>{dog.registeredName}</strong>\r\n            </p>\r\n\r\n            {/* placeholder */}\r\n\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Registered name\r\n                  <input\r\n                    defaultValue={dog.registeredName}\r\n                    type=\"text\"\r\n                    placeholder=\"Registered Name\"\r\n                    name={`dogs[${index}].registeredName`}\r\n                    ref={register}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Call Name\r\n                  <input\r\n                    defaultValue={dog.callName}\r\n                    type=\"text\"\r\n                    placeholder=\"Call Name\"\r\n                    name={`dogs[${index}].callName`}\r\n                    ref={register}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Registration Number\r\n                  <input\r\n                    defaultValue={dog.akcNumber}\r\n                    type=\"text\"\r\n                    placeholder=\"AKC Number\"\r\n                    name={`dogs[${index}].akcNumber`}\r\n                    ref={register}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Microchip\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Microchip\"\r\n                    name={`dogs[${index}].microchip`}\r\n                    ref={register}\r\n                    defaultValue={\r\n                      dog.microchip === \"\"\r\n                        ? \"No microchip added\"\r\n                        : dog.microchip\r\n                    }\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>\r\n                  Gender\r\n                  <input\r\n                    defaultValue={dog.gender}\r\n                    type=\"text\"\r\n                    placeholder=\"Gender\"\r\n                    name={`dogs[${index}].gender`}\r\n                    ref={register}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Breed\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Breed\"\r\n                    name={`dogs[${index}].breed`}\r\n                    ref={register}\r\n                    defaultValue={dog.breed}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  DOB\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"DOB\"\r\n                    name={`dogs[${index}].dob`}\r\n                    ref={register}\r\n                    defaultValue={format(new Date(dog.dob), \"MMM do yyyy\")}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </label>\r\n              </Form.Field>\r\n            </Form.Group>\r\n          </Segment>\r\n        );\r\n      })}{\" \"}\r\n      <Button.Group>\r\n        <Button negative onClick={removeDisabled}>\r\n          Edit\r\n        </Button>\r\n      </Button.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UnsanctionedEventRegistration;\r\n",{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"362","line":17,"column":10,"nodeType":"359","messageId":"360","endLine":17,"endColumn":16},{"ruleId":"357","severity":1,"message":"363","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":16},{"ruleId":"357","severity":1,"message":"364","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":16},{"ruleId":"357","severity":1,"message":"365","line":6,"column":8,"nodeType":"359","messageId":"360","endLine":6,"endColumn":24},{"ruleId":"357","severity":1,"message":"366","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":15},{"ruleId":"357","severity":1,"message":"367","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"357","severity":1,"message":"368","line":24,"column":10,"nodeType":"359","messageId":"360","endLine":24,"endColumn":16},{"ruleId":"357","severity":1,"message":"369","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"370","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"357","severity":1,"message":"371","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":25},{"ruleId":"357","severity":1,"message":"372","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":16},{"ruleId":"357","severity":1,"message":"373","line":5,"column":18,"nodeType":"359","messageId":"360","endLine":5,"endColumn":23},{"ruleId":"374","severity":1,"message":"375","line":41,"column":23,"nodeType":"376","messageId":"377","endLine":41,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":33,"column":19,"nodeType":"380","endLine":33,"endColumn":34},{"ruleId":"357","severity":1,"message":"361","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"370","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"357","severity":1,"message":"381","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":23},{"ruleId":"357","severity":1,"message":"382","line":4,"column":25,"nodeType":"359","messageId":"360","endLine":4,"endColumn":29},{"ruleId":"357","severity":1,"message":"383","line":3,"column":8,"nodeType":"359","messageId":"360","endLine":3,"endColumn":11},{"ruleId":"357","severity":1,"message":"384","line":9,"column":22,"nodeType":"359","messageId":"360","endLine":9,"endColumn":35},{"ruleId":"357","severity":1,"message":"385","line":11,"column":9,"nodeType":"359","messageId":"360","endLine":11,"endColumn":19},{"ruleId":"357","severity":1,"message":"386","line":5,"column":35,"nodeType":"359","messageId":"360","endLine":5,"endColumn":42},{"ruleId":"353","replacedBy":"387"},{"ruleId":"355","replacedBy":"388"},{"ruleId":"353","replacedBy":"389"},{"ruleId":"355","replacedBy":"390"},{"ruleId":"357","severity":1,"message":"391","line":2,"column":25,"nodeType":"359","messageId":"360","endLine":2,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":17,"column":6,"nodeType":"394","endLine":17,"endColumn":8,"suggestions":"395"},{"ruleId":"396","severity":1,"message":"397","line":5,"column":1,"nodeType":"398","endLine":95,"endColumn":3},{"ruleId":"357","severity":1,"message":"399","line":13,"column":7,"nodeType":"359","messageId":"360","endLine":13,"endColumn":19},{"ruleId":"357","severity":1,"message":"400","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":28},{"ruleId":"357","severity":1,"message":"401","line":1,"column":30,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"392","severity":1,"message":"402","line":25,"column":6,"nodeType":"394","endLine":25,"endColumn":8,"suggestions":"403"},{"ruleId":"357","severity":1,"message":"404","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":20},{"ruleId":"357","severity":1,"message":"405","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":16},{"ruleId":"357","severity":1,"message":"406","line":17,"column":5,"nodeType":"359","messageId":"360","endLine":17,"endColumn":10},{"ruleId":"357","severity":1,"message":"407","line":3,"column":7,"nodeType":"359","messageId":"360","endLine":3,"endColumn":18},{"ruleId":"357","severity":1,"message":"382","line":3,"column":3,"nodeType":"359","messageId":"360","endLine":3,"endColumn":7},{"ruleId":"357","severity":1,"message":"408","line":4,"column":3,"nodeType":"359","messageId":"360","endLine":4,"endColumn":11},{"ruleId":"357","severity":1,"message":"409","line":6,"column":3,"nodeType":"359","messageId":"360","endLine":6,"endColumn":9},{"ruleId":"357","severity":1,"message":"410","line":7,"column":3,"nodeType":"359","messageId":"360","endLine":7,"endColumn":8},{"ruleId":"357","severity":1,"message":"373","line":8,"column":3,"nodeType":"359","messageId":"360","endLine":8,"endColumn":8},{"ruleId":"357","severity":1,"message":"411","line":4,"column":3,"nodeType":"359","messageId":"360","endLine":4,"endColumn":12},{"ruleId":"357","severity":1,"message":"409","line":5,"column":3,"nodeType":"359","messageId":"360","endLine":5,"endColumn":9},{"ruleId":"357","severity":1,"message":"412","line":9,"column":3,"nodeType":"359","messageId":"360","endLine":9,"endColumn":8},{"ruleId":"357","severity":1,"message":"413","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"411","line":6,"column":3,"nodeType":"359","messageId":"360","endLine":6,"endColumn":12},{"ruleId":"357","severity":1,"message":"409","line":7,"column":3,"nodeType":"359","messageId":"360","endLine":7,"endColumn":9},{"ruleId":"357","severity":1,"message":"412","line":10,"column":3,"nodeType":"359","messageId":"360","endLine":10,"endColumn":8},{"ruleId":"357","severity":1,"message":"414","line":25,"column":9,"nodeType":"359","messageId":"360","endLine":25,"endColumn":19},{"ruleId":"392","severity":1,"message":"402","line":33,"column":6,"nodeType":"394","endLine":33,"endColumn":8,"suggestions":"415"},{"ruleId":"357","severity":1,"message":"416","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":16},{"ruleId":"357","severity":1,"message":"413","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":14},{"ruleId":"357","severity":1,"message":"417","line":12,"column":35,"nodeType":"359","messageId":"360","endLine":12,"endColumn":41},{"ruleId":"357","severity":1,"message":"418","line":29,"column":13,"nodeType":"359","messageId":"360","endLine":29,"endColumn":26},{"ruleId":"357","severity":1,"message":"416","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":16},{"ruleId":"357","severity":1,"message":"413","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":14},{"ruleId":"357","severity":1,"message":"417","line":10,"column":35,"nodeType":"359","messageId":"360","endLine":10,"endColumn":41},{"ruleId":"357","severity":1,"message":"413","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":71,"column":38,"nodeType":"380","endLine":71,"endColumn":53},{"ruleId":"357","severity":1,"message":"417","line":7,"column":35,"nodeType":"359","messageId":"360","endLine":7,"endColumn":41},{"ruleId":"357","severity":1,"message":"419","line":9,"column":11,"nodeType":"359","messageId":"360","endLine":9,"endColumn":20},{"ruleId":"357","severity":1,"message":"417","line":64,"column":35,"nodeType":"359","messageId":"360","endLine":64,"endColumn":41},{"ruleId":"357","severity":1,"message":"420","line":84,"column":11,"nodeType":"359","messageId":"360","endLine":84,"endColumn":20},{"ruleId":"421","severity":1,"message":"422","line":9,"column":7,"nodeType":"423","endLine":16,"endColumn":8},{"ruleId":"392","severity":1,"message":"424","line":27,"column":6,"nodeType":"394","endLine":27,"endColumn":8,"suggestions":"425"},{"ruleId":"357","severity":1,"message":"417","line":12,"column":35,"nodeType":"359","messageId":"360","endLine":12,"endColumn":41},{"ruleId":"378","severity":1,"message":"379","line":223,"column":53,"nodeType":"380","endLine":223,"endColumn":68},{"ruleId":"392","severity":1,"message":"426","line":47,"column":6,"nodeType":"394","endLine":47,"endColumn":8,"suggestions":"427"},{"ruleId":"357","severity":1,"message":"428","line":49,"column":9,"nodeType":"359","messageId":"360","endLine":49,"endColumn":15},{"ruleId":"357","severity":1,"message":"429","line":14,"column":9,"nodeType":"359","messageId":"360","endLine":14,"endColumn":22},{"ruleId":"357","severity":1,"message":"430","line":20,"column":5,"nodeType":"359","messageId":"360","endLine":20,"endColumn":14},{"ruleId":"357","severity":1,"message":"417","line":21,"column":5,"nodeType":"359","messageId":"360","endLine":21,"endColumn":11},{"ruleId":"357","severity":1,"message":"406","line":22,"column":5,"nodeType":"359","messageId":"360","endLine":22,"endColumn":10},{"ruleId":"357","severity":1,"message":"431","line":23,"column":5,"nodeType":"359","messageId":"360","endLine":23,"endColumn":13},{"ruleId":"357","severity":1,"message":"432","line":30,"column":11,"nodeType":"359","messageId":"360","endLine":30,"endColumn":17},{"ruleId":"357","severity":1,"message":"433","line":30,"column":19,"nodeType":"359","messageId":"360","endLine":30,"endColumn":25},{"ruleId":"357","severity":1,"message":"434","line":30,"column":27,"nodeType":"359","messageId":"360","endLine":30,"endColumn":33},{"ruleId":"357","severity":1,"message":"435","line":77,"column":13,"nodeType":"359","messageId":"360","endLine":77,"endColumn":21},{"ruleId":"357","severity":1,"message":"436","line":109,"column":9,"nodeType":"359","messageId":"360","endLine":109,"endColumn":22},{"ruleId":"357","severity":1,"message":"411","line":3,"column":3,"nodeType":"359","messageId":"360","endLine":3,"endColumn":12},{"ruleId":"357","severity":1,"message":"409","line":4,"column":3,"nodeType":"359","messageId":"360","endLine":4,"endColumn":9},{"ruleId":"357","severity":1,"message":"372","line":5,"column":3,"nodeType":"359","messageId":"360","endLine":5,"endColumn":9},{"ruleId":"357","severity":1,"message":"382","line":6,"column":3,"nodeType":"359","messageId":"360","endLine":6,"endColumn":7},{"ruleId":"357","severity":1,"message":"412","line":8,"column":3,"nodeType":"359","messageId":"360","endLine":8,"endColumn":8},{"ruleId":"357","severity":1,"message":"437","line":22,"column":13,"nodeType":"359","messageId":"360","endLine":22,"endColumn":20},{"ruleId":"357","severity":1,"message":"381","line":3,"column":19,"nodeType":"359","messageId":"360","endLine":3,"endColumn":32},{"ruleId":"357","severity":1,"message":"438","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":14,"endColumn":12},{"ruleId":"357","severity":1,"message":"430","line":17,"column":5,"nodeType":"359","messageId":"360","endLine":17,"endColumn":14},{"ruleId":"357","severity":1,"message":"417","line":18,"column":5,"nodeType":"359","messageId":"360","endLine":18,"endColumn":11},{"ruleId":"357","severity":1,"message":"406","line":19,"column":5,"nodeType":"359","messageId":"360","endLine":19,"endColumn":10},{"ruleId":"357","severity":1,"message":"431","line":20,"column":5,"nodeType":"359","messageId":"360","endLine":20,"endColumn":13},{"ruleId":"357","severity":1,"message":"437","line":34,"column":13,"nodeType":"359","messageId":"360","endLine":34,"endColumn":20},"no-native-reassign",["439"],"no-negated-in-lhs",["440"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'events' is defined but never used.","'Features' is defined but never used.","'JoinDesc' is defined but never used.","'SectionSeparator' is defined but never used.","'OurDogs' is defined but never used.","'ClubEvents' is defined but never used.","'events' is assigned a value but never used.","'LearnMoreButton' is defined but never used.","'useForm' is defined but never used.","'RegistrationModal' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useFieldArray' is defined but never used.","'Form' is defined but never used.","'pdf' is defined but never used.","'setPageNumber' is assigned a value but never used.","'toggleOpen' is assigned a value but never used.","'prepend' is assigned a value but never used.",["439"],["440"],["439"],["440"],"'Controller' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addPrimaryOwner'. Either include it or remove the dependency array.","ArrayExpression",["441"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'secondaryNum' is assigned a value but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'addDog'. Either include it or remove the dependency array.",["442"],"'storageRef' is defined but never used.","'apiUrl' is defined but never used.","'reset' is assigned a value but never used.","'firebaseApp' is assigned a value but never used.","'Checkbox' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'Container' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'goRegister' is assigned a value but never used.",["443"],"'format' is defined but never used.","'errors' is assigned a value but never used.","'fetchResponse' is assigned a value but never used.","'postEvent' is assigned a value but never used.","'sendEvent' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has missing dependencies: 'price', 'props.location.state.clubRegistration', 'props.location.state.sanctionedEventRegistration', and 'props.location.state.sanctionedPrice'. Either include them or remove the dependency array. If 'setPrice' needs the current value of 'props.location.state.sanctionedPrice', you can also switch to useReducer instead of useState and read 'props.location.state.sanctionedPrice' in the reducer.",["445"],"'client' is assigned a value but never used.","'handleNumDogs' is assigned a value but never used.","'getValues' is assigned a value but never used.","'setValue' is assigned a value but never used.","'fields' is assigned a value but never used.","'append' is assigned a value but never used.","'remove' is assigned a value but never used.","'postData' is assigned a value but never used.","'paymentAmount' is assigned a value but never used.","'postDog' is assigned a value but never used.","'control' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"448","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},"Update the dependencies array to be: [addPrimaryOwner]",{"range":"455","text":"456"},"Update the dependencies array to be: [addDog]",{"range":"457","text":"458"},{"range":"459","text":"458"},"Update the dependencies array to be: [token]",{"range":"460","text":"461"},"Update the dependencies array to be: [price, props.location.state.clubRegistration, props.location.state.sanctionedEventRegistration, props.location.state.sanctionedPrice]",{"range":"462","text":"463"},[478,480],"[addPrimaryOwner]",[729,731],"[addDog]",[745,747],[727,729],"[token]",[1601,1603],"[price, props.location.state.clubRegistration, props.location.state.sanctionedEventRegistration, props.location.state.sanctionedPrice]"]